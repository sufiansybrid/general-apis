(()=>{(function(x,r){"use strict";let v="development",k="".split(","),u=x.location.hostname;if(v==="production"&&!k.includes(u)){console.warn("PSW Widget blocked on this domain:",u);return}let l={apiBaseUrl:"https://www.pswbot.concaveanalytics.com/pswbot",websocketUrl:"www.pswbot.concaveanalytics.com/pswbot",apiKey:"9754ebf79742477c90f0fc21bb851d1f",streamInterval:parseInt("300",10)||300},s={conversation_id:"",user_email:"",ntn_number:"",full_name:"",city:"",initial_data_completed:0,talking_to:"bot",socket:null,socket_connect_flag:0},_=["human","agent","i want to talk to an agent","i need to speak with a human","connect me to an agent","transfer me to a human","i need help from an agent","i want human support","can i talk to a person","i need to talk to someone","get me a human","speak to a real person","talk to customer support","i want to speak to support","let me talk to someone","i need assistance from a human","please connect me to an agent","i want to chat with a human","get me customer service","need to talk to an agent","can you transfer me to a human","i want to talk to someone real","agent transfer","talk to a human","talk to an agent","talk with a human","talk with an agent","can i speak to an agent","can i speak to a human","get human help","need human help","need to speak with someone","i want live support","i want to speak to a representative","get me a live agent","talk to live support","talk to someone live","i need human assistance","get me real help","real person please","can i talk to customer service","real support","need to speak to an actual person","someone real please","speak with someone","live person please","need live help","support agent please"],S=`
        #psw-chat-widget-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 10000;
            font-family: Arial, sans-serif;
            font-size: 15px;
        }

        #psw-chat-widget-button {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #63c58d;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            border: none;
        }

        #psw-chat-widget-button:hover {
            background-color: #4daf78;
        }

        #psw-chat-widget {
            display: none;
            width: 450px;
            height: 600px;
            background-color: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
            flex-direction: column;
            margin-bottom: 15px;
        }

        #psw-chat-header {
            background-color: #198754;
            color: white;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #psw-chat-actions {
            display: flex;
            gap: 10px;
        }

        #psw-exit-chat, #psw-close-chat {
            cursor: pointer;
            font-size: 22px;
        }

        #psw-chat-title {
            font-weight: bold;
            font-size: 16px;
        }

        #psw-chat-messages {
            flex: 1;
            padding: 15px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 10px;
            height: 460px;
            scroll-behavior: smooth;
        }

        .psw-message {
            max-width: 80%;
            padding: 10px 15px;
            border-radius: 18px;
            margin-bottom: 5px;
            word-wrap: break-word;
        }

        .psw-user-message {
            background-color: #ace7c3;
            align-self: flex-end;
            border-bottom-right-radius: 4px;
            color: #1e3d31;
        }

        .psw-bot-message {
            background-color: #e8f5e9;
            align-self: flex-start;
            border-bottom-left-radius: 4px;
            color: #000;
        }

        .psw-bot-message h1, .psw-bot-message h2, .psw-bot-message h3, 
        .psw-bot-message h4, .psw-bot-message h5, .psw-bot-message h6 {
            margin: 10px 0 5px 0;
            font-weight: bold;
            color: #333;
        }

        .psw-bot-message h1 { font-size: 1.4em; }
        .psw-bot-message h2 { font-size: 1.3em; }
        .psw-bot-message h3 { font-size: 1.2em; }
        .psw-bot-message h4, .psw-bot-message h5, .psw-bot-message h6 { font-size: 1.1em; }

        .psw-bot-message p {
            margin: 0 0 10px 0;
            line-height: 1.4;
        }

        .psw-bot-message ul, .psw-bot-message ol {
            margin: 5px 0;
            padding-left: 20px;
        }

        .psw-bot-message li {
            margin-bottom: 3px;
        }

        .psw-bot-message a {
            color: #4a90e2;
            text-decoration: none;
        }

        .psw-bot-message a:hover {
            text-decoration: underline;
        }

        .psw-bot-message code {
            background-color: #f7f7f7;
            padding: 2px 5px;
            border-radius: 3px;
            font-family: monospace;
            font-size: 0.9em;
        }

        .psw-bot-message pre {
            background-color: #f7f7f7;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
            margin: 10px 0;
        }

        .psw-bot-message blockquote {
            border-left: 3px solid #ccc;
            margin: 10px 0;
            padding-left: 10px;
            color: #666;
        }

        .psw-bot-message table {
            border-collapse: collapse;
            width: 100%;
            margin: 10px 0;
        }

        .psw-bot-message th, .psw-bot-message td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .psw-bot-message th {
            background-color: #f2f2f2;
        }

        #psw-chat-input-container {
            padding: 15px;
            border-top: 1px solid #e6e6e6;
            display: flex;
            align-items: center;
        }

        #psw-chat-input {
            flex: 1;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 20px;
            outline: none;
            resize: none;
            max-height: 100px;
            overflow-y: auto;
            font-family: Arial, sans-serif;
        }
#psw-send-button {
  background-color: #63c58d;
  color: white;
  border: none;
  width: 44px;
  height: 44px;
  border-radius: 50%;
  margin-left: 10px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s ease, transform 0.15s ease;
}

#psw-send-button:hover {
  background-color: #4daf78;
  transform: scale(1.05);
}


        .psw-typing-indicator {
            display: flex;
            padding: 10px 15px;
            background-color: #f1f1f1;
            border-radius: 18px;
            border-bottom-left-radius: 4px;
            align-self: flex-start;
            margin-bottom: 5px;
            width: fit-content;
        }

        .psw-typing-indicator span {
            height: 8px;
            width: 8px;
            background-color: #666;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
            animation: psw-pulse 1.4s infinite ease-in-out;
        }

        .psw-typing-indicator span:nth-child(2) {
            animation-delay: 0.2s;
        }

        .psw-typing-indicator span:nth-child(3) {
            animation-delay: 0.4s;
            margin-right: 0;
        }

        @keyframes psw-pulse {
            0%, 50%, 100% {
                transform: scale(1);
                opacity: 1;
            }
            25%, 75% {
                transform: scale(0.8);
                opacity: 0.7;
            }
        }

        .psw-cursor {
            display: inline-block;
            width: 8px;
            height: 16px;
            background-color: #333;
            animation: psw-blink 1s infinite;
            margin-left: 2px;
            vertical-align: middle;
        }

        @keyframes psw-blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0; }
        }

        #psw-chat-form-container {
            padding: 0 15px;
        }
.psw-form-control {
  width: 95%;
  padding: 8px 12px;
  border: 1px solid #4daf78;
  border-radius: 4px;
  margin: 0 auto 10px auto; /* Center horizontally */
  display: block;           /* Ensure it's treated as a block */
  font-family: Arial, sans-serif;
}

        .psw-form-control:focus {
            border-color: #4daf78;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
            outline: none;
        }
.psw-btn {
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  min-width: 100px;
  cursor: pointer;
  font-size: 14px;
  text-align: center;
  display: block;
  margin: 10px auto; /* center horizontally */
}


.psw-btn-success {
  background-color: #4daf78;
  color: white;
}

.psw-btn-success:hover {
  background-color: #449e6e;
}


        .psw-text-danger {
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 5px;
        }

        .psw-star {
            color: #ffc107;
            cursor: pointer;
            font-size: 28px;
            transition: transform 0.2s ease;
        }

        .psw-star:hover {
            transform: scale(1.2);
        }

        .psw-feedback-form {
            display: flex;
            flex-direction: column;
            padding: 15px;
            border: 1px solid #ddd;
            background-color: #f8f9fa;
            margin: 10px;
            border-radius: 5px;
        }

    .psw-clear-chat {
  cursor: pointer;
  margin-left: 10px;
  font-size: 18px;
  background-color: #63c58d;
  color: white;
  padding: 6px 10px;
  border: none;
  border-radius: 6px;
  transition: background-color 0.2s ease, transform 0.1s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.psw-clear-chat:hover {
  background-color: #4daf78;
  transform: scale(1.05);
}


        @media (max-width: 480px) {
            #psw-chat-widget {
                width: 100vw;
                height: 100vh;
                border-radius: 0;
                bottom: 0;
                right: 0;
                position: fixed;
            }

            #psw-chat-widget-button {
                bottom: 10px;
                right: 10px;
            }

            #psw-chat-header {
                padding: 10px;
            }

            #psw-chat-title {
                font-size: 14px;
            }

            #psw-close-chat, #psw-exit-chat {
                font-size: 18px;
            }

            #psw-chat-messages {
                padding: 10px;
                height: calc(100% - 120px);
            }

            .psw-message {
                padding: 8px 12px;
                font-size: 14px;
            }

            #psw-chat-input-container {
                padding: 10px;
            }

            #psw-chat-input {
                padding: 8px 12px;
                font-size: 14px;
            }

            #psw-send-button {
                width: 35px;
                height: 35px;
            }
        }
    `;function C(h){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(h)}function w(h){let e=r.createElement("div");e.innerHTML=h,e.querySelectorAll("script").forEach(o=>o.remove());let a=e.querySelectorAll("*"),n=["onerror","onload","onclick","onmouseover","onmouseout","onkeydown","onkeypress","onkeyup"];return a.forEach(o=>{n.forEach(i=>{o.hasAttribute(i)&&o.removeAttribute(i)}),o.hasAttribute("href")&&o.getAttribute("href").startsWith("javascript:")&&o.setAttribute("href","#")}),e.innerHTML}function f(h){return h?h.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/`(.*?)`/g,"<code>$1</code>").replace(/\n/g,"<br>"):""}class y{constructor(){this.elements={},this.init()}init(){this.injectCSS(),this.createHTML(),this.bindEvents(),this.loadChatFromStorage()}injectCSS(){let e=r.createElement("style");e.textContent=S,r.head.appendChild(e)}createHTML(){let e=r.createElement("div");e.id="psw-chat-widget-container",e.innerHTML=`
                <div id="psw-chat-widget">
                    <div id="psw-chat-header">
                        <div id="psw-chat-title">PSW Support Chat</div>
                        <div id="psw-chat-actions">
                            <div id="psw-exit-chat" title="Exit Chat">
                                <svg fill="#ffffff" width="22" height="22" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.502 11.5a1.002 1.002 0 1 1 0 2.004 1.002 1.002 0 0 1 0-2.004Z" fill="currentColor"></path>
                                    <path d="M12 4.354v6.651l7.442-.001L17.72 9.28a.75.75 0 0 1-.073-.976l.073-.084a.75.75 0 0 1 .976-.073l.084.073 2.997 2.997a.75.75 0 0 1 .073.976l-.073.084-2.996 3.004a.75.75 0 0 1-1.134-.975l.072-.085 1.713-1.717-7.431.001L12 19.25a.75.75 0 0 1-.88.739l-8.5-1.502A.75.75 0 0 1 2 17.75V5.75a.75.75 0 0 1 .628-.74l8.5-1.396a.75.75 0 0 1 .872.74Zm-1.5.883-7 1.15V17.12l7 1.236V5.237Z" fill="currentColor"></path>
                                    <path d="M13 18.501h.765l.102-.006a.75.75 0 0 0 .648-.745l-.007-4.25H13v5.001ZM13.002 10 13 8.725V5h.745a.75.75 0 0 1 .743.647l.007.102.007 4.251h-1.5Z" fill="currentColor"></path>
                                </svg>
                            </div>
                            <div id="psw-close-chat" title="Close Chat">
                                <svg fill="#ffffff" width="22" height="22" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z" fill="currentColor" />
                                </svg>
                            </div>
                        </div>
                    </div>
                    <div id="psw-chat-messages">
                        <div class="psw-message psw-bot-message">Hi, Please enter your email</div>
                    </div>
                    <div id="psw-chat-form-container"></div>
                    <div id="psw-chat-input-container">
                        <textarea id="psw-chat-input" rows="1" placeholder="Type your question..."></textarea>
                        <div class="psw-clear-chat" title="Clear Chat">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="#ffffff">
                                <path d="M12 6V3L8 7l4 4V8c2.76 0 5 2.24 5 5s-2.24 5-5 5a5 5 0 0 1-4.9-4h-2.02a7 7 0 0 0 6.92 6 7 7 0 0 0 0-14z"/>
                            </svg>
                        </div>
                        <button id="psw-send-button" title="Send Message">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M22 2L11 13" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M22 2L15 22L11 13L2 9L22 2Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </button>
                    </div>
                </div>
                <button id="psw-chat-widget-button">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M21 11.5C21.0034 12.8199 20.6951 14.1219 20.1 15.3C19.3944 16.7118 18.3098 17.8992 16.9674 18.7293C15.6251 19.5594 14.0782 19.9994 12.5 20C11.1801 20.0035 9.87812 19.6951 8.7 19.1L3 21L4.9 15.3C4.30493 14.1219 3.99656 12.8199 4 11.5C4.00061 9.92176 4.44061 8.37488 5.27072 7.03258C6.10083 5.69028 7.28825 4.6056 8.7 3.90003C9.87812 3.30496 11.1801 2.99659 12.5 3.00003H13C15.0843 3.11502 17.053 3.99479 18.5291 5.47089C20.0052 6.94699 20.885 8.91568 21 11V11.5Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                </button>
            `,r.body.appendChild(e),this.elements={container:e,widget:r.getElementById("psw-chat-widget"),button:r.getElementById("psw-chat-widget-button"),closeChat:r.getElementById("psw-close-chat"),exitChat:r.getElementById("psw-exit-chat"),messages:r.getElementById("psw-chat-messages"),input:r.getElementById("psw-chat-input"),sendButton:r.getElementById("psw-send-button"),inputContainer:r.getElementById("psw-chat-input-container"),formContainer:r.getElementById("psw-chat-form-container"),clearChat:r.querySelector(".psw-clear-chat")}}bindEvents(){this.elements.button.addEventListener("click",()=>this.openWidget()),this.elements.closeChat.addEventListener("click",()=>this.closeWidget()),this.elements.exitChat.addEventListener("click",()=>this.showFeedbackForm()),this.elements.clearChat.addEventListener("click",()=>this.clearChatHistory()),this.elements.sendButton.addEventListener("click",()=>this.handleSendMessage()),this.elements.input.addEventListener("keypress",e=>{e.key==="Enter"&&!e.shiftKey&&(e.preventDefault(),this.handleSendMessage())}),this.elements.input.addEventListener("input",function(){this.style.height="auto";let e=Math.min(Math.max(this.scrollHeight,40),100);this.style.height=e+"px"})}openWidget(){this.elements.widget.style.display="flex",this.elements.button.style.display="none",this.elements.input.focus(),this.scrollToBottom()}closeWidget(){this.elements.widget.style.display="none",this.elements.button.style.display="flex"}scrollToBottom(){this.elements.messages.scrollTop=this.elements.messages.scrollHeight}handleSendMessage(){let e=this.elements.input.value.trim();e&&(this.elements.input.value="",this.elements.input.style.height="auto",this.sendMessage(e))}addUserMessage(e){let t=r.createElement("div");return t.classList.add("psw-message","psw-user-message"),t.textContent=e,this.elements.messages.appendChild(t),this.scrollToBottom(),t}updateBotMessage(e,t,a=!1){let n=f(t);if(n=w(n),e.innerHTML=n,!a){let i=r.createElement("span");i.classList.add("psw-cursor"),e.appendChild(i)}e.querySelectorAll("a").forEach(i=>{i.setAttribute("target","_blank"),i.setAttribute("rel","noopener noreferrer")}),this.scrollToBottom()}showTypingIndicator(){let e=r.createElement("div");e.classList.add("psw-typing-indicator"),e.id="psw-typing-indicator",e.innerHTML="<span></span><span></span><span></span>",this.elements.messages.appendChild(e),this.scrollToBottom()}removeTypingIndicator(){let e=r.getElementById("psw-typing-indicator");e&&e.remove()}showDetailsForm(){this.elements.inputContainer.style.display="none";let e=r.getElementById("psw-details-form");e&&e.remove(),this.elements.formContainer.innerHTML=`
    <form id="psw-details-form" style="display: flex; flex-direction: column; gap: 10px; padding: 15px;">
      <div>
        <input type="text" id="psw-full-name" class="psw-form-control" placeholder="Full Name" required>
        <div id="psw-full-name-error" class="psw-text-danger"></div>
      </div>
      <div>
        <input type="text" id="psw-ntn-number" class="psw-form-control" placeholder="Phone Number" required>
        <div id="psw-ntn-number-error" class="psw-text-danger"></div>
      </div>
      <div>
        <input type="text" id="psw-city-name" class="psw-form-control" placeholder="City" required>
        <div id="psw-city-name-error" class="psw-text-danger"></div>
      </div>
      <button type="submit" class="psw-btn psw-btn-success">Submit</button>
    </form>
  `,r.getElementById("psw-details-form").addEventListener("submit",t=>this.handleDetailsForm(t))}async handleDetailsForm(e){e.preventDefault();let t=r.getElementById("psw-full-name"),a=r.getElementById("psw-ntn-number"),n=r.getElementById("psw-city-name"),o=r.getElementById("psw-full-name-error"),i=r.getElementById("psw-ntn-number-error"),p=r.getElementById("psw-city-name-error");o.textContent="",i.textContent="",p.textContent="";let g=a.value.trim(),c=t.value.trim(),d=n.value.trim(),m=!1;if(/^((\+92)|0)3\d{9}$/.test(g)||(i.textContent="Phone Number must be exactly 11 digits.",m=!0),/\d/.test(c)&&(o.textContent="Full Name should not contain numbers.",m=!0),/\d/.test(d)&&(p.textContent="City name should not contain numbers.",m=!0),!m)try{if((await fetch(`${l.apiBaseUrl}/api/update_conversation_item`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({conversation_id:s.conversation_id,api_key:l.apiKey,full_name:c,ntn_number:g,city:d})})).ok)s.full_name=c,s.ntn_number=g,s.city=d,s.initial_data_completed=1,this.saveChatToStorage(),this.hideDetailsForm(),this.addBotMessage(`Welcome ${c}. I am PSW Bot, How can I help you today? or type 'I want to talk to an agent' to connect with agent`);else throw new Error("Failed to save details")}catch(b){console.error("Error saving details:",b),this.addBotMessage("Sorry, there was an error saving your details. Please try again.")}}hideDetailsForm(){this.elements.formContainer.innerHTML="",this.elements.inputContainer.style.display="flex"}async sendMessage(e){if(this.shouldTransferToAgent(e)){this.addUserMessage(e),await this.transferToAgent(e);return}this.showTypingIndicator();try{s.initial_data_completed===0?s.user_email?s.initial_data_completed===0&&(this.showDetailsForm(),this.removeTypingIndicator()):await this.handleEmailInput(e):await this.sendChatMessage(e)}catch(t){console.error("Error sending message:",t),this.removeTypingIndicator(),this.addBotMessage("Sorry, I'm having trouble connecting. Please try again.")}this.saveChatToStorage()}async handleEmailInput(e){if(this.addUserMessage(e),!C(e)){this.removeTypingIndicator(),this.addBotMessage("Please enter a valid email address.");return}try{let t=await fetch(`${l.apiBaseUrl}/api/add_conversation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_email:e,api_key:l.apiKey})}),a=await t.json();if(t.ok){if(s.user_email=e,s.conversation_id=a.conversation_id,s.initial_data_completed=1,this.removeTypingIndicator(),a.user_fullname||a.user_city||a.user_ntn){this.addBotMessage(`Welcome ${a.user_fullname}. I am PSW Bot, How can I help you today? or type 'I want to talk to an agent' to connect with agent`);return}this.addBotMessage("Great! Now please provide your details:"),this.showDetailsForm()}else throw new Error(a.message||"Failed to start conversation")}catch(t){console.error("Error starting conversation:",t),this.removeTypingIndicator(),this.addBotMessage("Sorry, there was an error. Please try again.")}}async sendChatMessage(e){try{if(!s.socket&&s.socket_connect_flag===0){this.addUserMessage(e);let t=await fetch(`${l.apiBaseUrl}/api/process_question`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({api_key:l.apiKey,question:e,user_email:s.user_email,conversation_id:s.conversation_id})});if(t.ok){let a=await t.json();if(a.task_id){let n=a.task_id;this.handleStreamResponse(a.task_id)}else{console.error("No task ID in response:",a),this.removeTypingIndicator();let n=this.createBotMessageContainer();this.updateBotMessage(n,"Sorry, there was an error processing your message.",!0),this.saveChatToStorage()}}else{console.error("API Error:",t.status,t.statusText),this.removeTypingIndicator();let a=this.createBotMessageContainer();this.updateBotMessage(a,"Sorry, there was an error processing your message.",!0),this.saveChatToStorage()}}else this.connectWebSocket(s.conversation_id,s.user_email,e);this.removeTypingIndicator()}catch(t){console.error("Error in chat:",t),this.removeTypingIndicator()}}async handleStreamResponse(e){let t="",a=null,n=!0,o,i=(c,d=!0)=>{this.removeTypingIndicator(),a||(a=this.createBotMessageContainer()),this.updateBotMessage(a,c,d),this.saveChatToStorage()},p=async()=>{if(n)try{let c=await fetch(`${l.apiBaseUrl}/api/answer_streaming`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({api_key:l.apiKey,task_id:e})});if(!c.ok)return console.error("Stream error:",c.statusText),n=!1,i("Sorry, there was an error processing your message.");let d=await c.json();switch(d.status){case"Task is still processing":this.typingIndicatorShown||(this.removeTypingIndicator(),this.showTypingIndicator());break;case"receiving text":case"Task completed":default:if(this.removeTypingIndicator(),a||(a=this.createBotMessageContainer()),d.answer&&d.answer!==t&&(t=d.answer,this.updateBotMessage(a,t,!1)),d.status==="Task completed"){t=d.answer||t,this.updateBotMessage(a,t,!0),n=!1,clearTimeout(o),this.saveChatToStorage();return}}n&&(o=setTimeout(p,l.streamInterval))}catch(c){console.error("Stream error:",c),n=!1,i("Sorry, there was an error processing your message.")}},g=setTimeout(()=>{n&&(n=!1,i("Sorry, the response timed out."))},3e4);return p(),()=>{clearTimeout(g),clearTimeout(o)}}createBotMessageContainer(){let e=r.createElement("div");return e.classList.add("psw-message","psw-bot-message"),this.elements.messages.appendChild(e),this.scrollToBottom(),e}shouldTransferToAgent(e){let t=e.toLowerCase();return _.some(a=>t.includes(a))}async transferToAgent(e){if(this.removeTypingIndicator(),s.talking_to==="agent"){this.addBotMessage("You are already connected to an agent. Please wait for their response.");return}try{if((await fetch(`${l.apiBaseUrl}/api/transfer_conversation_to_agent`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({conversation_id:s.conversation_id,api_key:l.apiKey,user_email:s.user_email,message:e})})).ok)s.talking_to="agent",this.addBotMessage("We are connecting you with our agent please wait..."),this.connectWebSocket(s.conversation_id,s.user_email);else throw new Error("Failed to transfer to agent")}catch(t){console.error("Error transferring to agent:",t),this.addBotMessage("Sorry, all agents are currently busy. Please try again later.")}}connectWebSocket(e,t,a=null){if(s.socket&&s.socket.readyState===WebSocket.OPEN){a&&this.sendMessageToSocket(e,t,a);return}try{s.socket=new WebSocket(`ws://${l.websocketUrl}/ws/chat/${e}/`),s.socket_connect_flag=1,s.socket.onopen=()=>{s.socket_connect_flag=1,a&&this.sendMessageToSocket(e,t,a)},s.socket.onmessage=n=>{try{let o=JSON.parse(n.data);if(o.type==="chat_message"){this.removeTypingIndicator();let i,p=o.message_id||null;o.sent_by==="agent"?(i=this.createBotMessageContainer(),this.updateBotMessage(i,o.message,!0)):i=this.addUserMessage(o.message),p&&i.setAttribute("data-message-id",p),this.saveChatToStorage()}else if(o.type==="edit_message"){let i=r.querySelector(`.message[data-message-id="${o.message_id}"]`);this.updateMessageById(o.message_id,o.new_content)}}catch(o){console.error("Error handling WebSocket message:",o)}},s.socket.onerror=n=>{console.error("WebSocket error:",n),this.removeTypingIndicator();let o=this.createBotMessageContainer();this.updateBotMessage(o,"Sorry, there was an error connecting to the agent. Please try again later.",!0),this.saveChatToStorage()},s.socket.onclose=n=>{console.warn("WebSocket Connection Closed:",n),s.socket_connect_flag=0,s.talking_to==="agent"&&setTimeout(()=>this.connectWebSocket(e,t),3e3)}}catch(n){console.error("Error creating WebSocket:",n)}}sendMessageToSocket(e,t,a){try{let n=JSON.stringify({type:"user_side",conversation_id:e,user_email:t,message:a});if(!s.socket){console.warn("Socket not initialized");return}if(s.socket.readyState===WebSocket.CONNECTING){let o=setInterval(()=>{s.socket.readyState===WebSocket.OPEN&&(clearInterval(o),s.socket.send(n))},100);return}s.socket.readyState===WebSocket.OPEN?s.socket.send(n):console.warn("Socket not open, current state:",s.socket.readyState)}catch(n){console.error("Error sending message to socket:",n)}}addBotMessage(e){let t=r.createElement("div");t.classList.add("psw-message","psw-bot-message");let a=f(e);return a=w(a),t.innerHTML=a,t.querySelectorAll("a").forEach(o=>{o.setAttribute("target","_blank"),o.setAttribute("rel","noopener noreferrer")}),this.elements.messages.appendChild(t),this.scrollToBottom(),t}showFeedbackForm(){if(!s.conversation_id){this.addBotMessage("To submit feedback, please begin a conversation first.");return}let e=r.createElement("div");e.classList.add("psw-feedback-form"),e.innerHTML=`
    <h4>How was your experience?</h4>
    <div style="display: flex; justify-content: center; margin: 10px 0;">
        <span class="psw-star" data-rating="1">\u2605</span>
        <span class="psw-star" data-rating="2">\u2605</span>
        <span class="psw-star" data-rating="3">\u2605</span>
        <span class="psw-star" data-rating="4">\u2605</span>
        <span class="psw-star" data-rating="5">\u2605</span>
    </div>
    <textarea placeholder="Optional feedback..." rows="3" style="width: 100%; margin: 10px 0; padding: 8px; border: 1px solid #ddd; border-radius: 4px;"></textarea>
    <div style="display: flex; gap: 10px;">
        <button class="psw-btn psw-btn-success">Submit</button>
        <button class="psw-btn" style="background-color: #6c757d; color: white;">Skip</button>
    </div>
  `;let t=0,a=e.querySelectorAll(".psw-star");a.forEach((p,g)=>{p.addEventListener("click",()=>{t=g+1,a.forEach((c,d)=>{c.style.color=d<t?"#ffc107":"#e4e5e9"})})});let n=e.querySelector(".psw-btn-success"),o=e.querySelector(".psw-btn:nth-child(2)"),i=e.querySelector("textarea");n.addEventListener("click",async()=>{let p=i.value.trim();s.conversation_id&&await this.submitFeedback(t,p),e.remove(),s.conversation_id&&this.clearChatHistory()}),o.addEventListener("click",()=>{e.remove(),this.clearChatHistory()}),this.elements.messages.appendChild(e),this.scrollToBottom()}async submitFeedback(e,t){try{s.conversation_id&&await fetch(`${l.apiBaseUrl}/api/submit_conversation_feedback`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({api_key:l.apiKey,conversation_id:s.conversation_id,rating:e===0?5:e,comment:t})})}catch(a){console.error("Error submitting feedback:",a)}}clearChatHistory(){s.socket&&(s.socket.close(),s.socket=null),s={conversation_id:"",user_email:"",ntn_number:"",full_name:"",city:"",initial_data_completed:0,talking_to:"bot",socket:null,socket_connect_flag:0},this.elements.messages.innerHTML='<div class="psw-message psw-bot-message">Hi, Please enter your email</div>',this.hideDetailsForm(),this.clearChatFromStorage()}saveChatToStorage(){try{localStorage.setItem("psw_chat_state",JSON.stringify(s)),localStorage.setItem("psw_chat_messages",this.elements.messages.innerHTML)}catch(e){console.error("Error saving to localStorage:",e)}}updateMessageById(e,t){let a=`.psw-message[data-message-id="${e}"]`,n=r.querySelector(a);n&&(n.innerText=t);let o=this.elements.messages;localStorage.setItem("psw_chat_messages",o.innerHTML)}loadChatFromStorage(){try{let e=localStorage.getItem("psw_chat_state"),t=localStorage.getItem("psw_chat_messages");if(e){let a=JSON.parse(e);Object.assign(s,a)}t&&(this.elements.messages.innerHTML=t),s.talking_to==="agent"&&s.conversation_id&&this.connectWebSocket(s.conversation_id,s.user_email),s.user_email&&s.initial_data_completed===0?this.showDetailsForm():s.initial_data_completed===1&&this.hideDetailsForm()}catch(e){console.error("Error loading from localStorage:",e)}}clearChatFromStorage(){try{localStorage.removeItem("psw_chat_state"),localStorage.removeItem("psw_chat_messages")}catch(e){console.error("Error clearing localStorage:",e)}}}r.readyState==="loading"?r.addEventListener("DOMContentLoaded",()=>{new y}):new y})(window,document);})();
